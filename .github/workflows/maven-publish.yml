# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  FILE_PATH: ".github/version.txt"

jobs:
  update-version:
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Increment current version
      run: |
        current_version=$(cat $FILE_PATH)
        echo "Current Version: $current_version"

        new_version=$(echo "$current_version + 0.1" | bc)

        echo "$new_version" > $FILE_PATH
        echo "Updated Version: $new_version"
    
    - name: Upload new version number
      uses: actions/upload-artifact@v3
      with:
        name: version-number
        path: ${{ env.FILE_PATH }}

  build:
    needs: update-version
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github
        settings-path: ${{ github.workspace }}
    
    - name: Get version number
      uses: actions/download-artifact@v3
      with:
        name: version-number
    
    - name: Set version number
      run: |
        VERSION=$(cat version.txt)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Build with Maven
      run: mvn -B package --file pom.xml -Dproject.version=${{ env.VERSION }}

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v3
      with:
        name: customutils-jar
        path: ./target/customutils-${{ env.VERSION }}.jar

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml -Dproject.version=${{ env.VERSION }}
      env:
        GITHUB_TOKEN: ${{ github.token }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:

    - name: Download JAR artifact
      uses: actions/download-artifact@v3
      with:
        name: customutils-jar
    
    - name: Get version number
      uses: actions/download-artifact@v3
      with:
        name: version-number
    
    - name: Set version number
      run: |
        VERSION=$(cat version.txt)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: "SlayerUtils ${{ env.VERSION }}"
        body: |
          Automated release of the project.
        draft: false
        prerelease: false

    - name: Upload JAR to GitHub Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: customutils-${{ env.VERSION }}.jar
        asset_name: customutils-${{ env.VERSION }}.jar
        asset_content_type: application/java-archive
